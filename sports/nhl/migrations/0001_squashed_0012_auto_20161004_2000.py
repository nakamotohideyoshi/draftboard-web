# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-15 12:49
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# sports.nhl.migrations.0004_auto_20160302_1121
def load_initial_data(apps, schema_editor):
    """
    adds a dummy Season object to facillitate the migratino of older
    Game objects which cant have a foreign key to a null Season!

    :param apps:
    :param schema_editor:
    :return:
    """

    # get the model by name
    sport = 'nhl'
    Season = apps.get_model(sport, 'Season')
    try:
        # this must exist for migration to work
        season = Season.objects.get(pk=1)
    except Season.DoesNotExist:
        season = Season()
        season.srid = '%s_dummy_srid' % sport
        season.season_year = 0
        season.season_type = '%s_dummy_season_type' % sport
        season.save()


class Migration(migrations.Migration):

    replaces = [('nhl', '0001_initial'), ('nhl', '0002_auto_20150528_2321'), ('nhl', '0003_auto_20150625_0016'), ('nhl', '0004_game_prev_status'), ('nhl', '0005_tsxinjury_tsxnews_tsxplayer_tsxteam_tsxtransaction'), ('nhl', '0006_auto_20160110_2115'), ('nhl', '0007_auto_20160110_2243'), ('nhl', '0008_player_season_fppg'), ('nhl', '0009_auto_20160119_2126'), ('nhl', '0002_player_lineup_nickname'), ('nhl', '0003_auto_20160229_1717'), ('nhl', '0004_auto_20160302_1121'), ('nhl', '0005_auto_20160302_1624'), ('nhl', '0006_auto_20160315_1530'), ('nhl', '0007_auto_20160315_1927'), ('nhl', '0008_player_on_active_roster'), ('nhl', '0009_auto_20160531_2139'), ('nhl', '0010_playerstats_fp_change'), ('nhl', '0011_game_boxscore_data'), ('nhl', '0012_auto_20161004_2000')]

    initial = True

    dependencies = [
        ('sports', '0001_squashed_0008_auto_20160119_2124'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('start', models.DateTimeField()),
                ('status', models.CharField(max_length=32)),
                ('srid_home', models.CharField(help_text='home team sportsradar global id', max_length=64)),
                ('srid_away', models.CharField(help_text='away team sportsradar global id', max_length=64)),
                ('title', models.CharField(max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameBoxscore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(default=None, help_text='the sportsradar global id for the game', max_length=64, unique=True)),
                ('srid_home', models.CharField(max_length=64)),
                ('srid_away', models.CharField(max_length=64)),
                ('home_id', models.PositiveIntegerField()),
                ('away_id', models.PositiveIntegerField()),
                ('attendance', models.IntegerField(default=0)),
                ('coverage', models.CharField(default='', max_length=64)),
                ('status', models.CharField(default='', max_length=64)),
                ('home_score', models.IntegerField(default=0)),
                ('away_score', models.IntegerField(default=0)),
                ('title', models.CharField(default='', max_length=256)),
                ('home_scoring_json', models.CharField(default='', max_length=2048)),
                ('away_scoring_json', models.CharField(default='', max_length=2048)),
                ('clock', models.CharField(default='', max_length=16)),
                ('period', models.CharField(default='', max_length=16)),
                ('away_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_gameboxscore_away_team', to='contenttypes.ContentType')),
                ('home_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_gameboxscore_home_team', to='contenttypes.ContentType')),
                ('updated', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 25, 49, 607857, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GamePortion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game this is associate with', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('category', models.CharField(default='', help_text='typically one of these: ["inning-half","quarter","period"]', max_length=32)),
                ('sequence', models.IntegerField(default=0, help_text='an ordering of all GamePortions with the same srid_game')),
                ('srid', models.CharField(default='', max_length=64)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_gameportion_sport_game', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('iid', models.CharField(help_text='custom injury id', max_length=128, unique=True)),
                ('player_id', models.PositiveIntegerField()),
                ('status', models.CharField(default='', max_length=32)),
                ('description', models.CharField(default='', max_length=1024)),
                ('srid', models.CharField(default='', max_length=64)),
                ('comment', models.CharField(default='', max_length=1024)),
                ('player_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_injury_injured_player', to='contenttypes.ContentType')),
                ('ddtimestamp', models.BigIntegerField(default=0, help_text='the time this injury update was parsed by dataden.this will be the same value for all objects that were in the feed on the last parse.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pbp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_pbp_sport_game', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PbpDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('pbp_id', models.PositiveIntegerField()),
                ('portion_id', models.PositiveIntegerField()),
                ('idx', models.IntegerField(default=0)),
                ('description', models.CharField(default='', max_length=1024)),
                ('srid', models.CharField(default='', max_length=64)),
                ('pbp_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_pbpdescription_pbpdesc_pbp', to='contenttypes.ContentType')),
                ('portion_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_pbpdescription_pbpdesc_portion', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('injury_id', models.PositiveIntegerField(null=True)),
                ('srid_team', models.CharField(default='', max_length=64)),
                ('birth_place', models.CharField(default='', max_length=64)),
                ('birthdate', models.CharField(default='', max_length=64)),
                ('college', models.CharField(default='', max_length=64)),
                ('experience', models.FloatField(default=0.0)),
                ('height', models.FloatField(default=0.0, help_text='inches')),
                ('weight', models.FloatField(default=0.0, help_text='lbs')),
                ('jersey_number', models.CharField(default='', max_length=64)),
                ('status', models.CharField(default='', help_text='roster status - ie: "ACT" means they are ON the roster. Not particularly active as in not-injured!', max_length=64)),
                ('draft_pick', models.CharField(default='', max_length=64)),
                ('draft_round', models.CharField(default='', max_length=64)),
                ('draft_year', models.CharField(default='', max_length=64)),
                ('srid_draft_team', models.CharField(default='', max_length=64)),
                ('injury_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nhl_player_players_injury', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_player_player_position', to='sports.Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game', max_length=64)),
                ('srid_player', models.CharField(help_text='the sportsradar global id for the player', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('player_id', models.PositiveIntegerField()),
                ('fantasy_points', models.FloatField(default=0.0)),
                ('goal', models.IntegerField(default=0)),
                ('assist', models.IntegerField(default=0)),
                ('sog', models.IntegerField(default=0)),
                ('blk', models.IntegerField(default=0)),
                ('sh_goal', models.IntegerField(default=0)),
                ('pp_goal', models.IntegerField(default=0)),
                ('so_goal', models.IntegerField(default=0)),
                ('w', models.BooleanField(default=False)),
                ('l', models.BooleanField(default=False)),
                ('otl', models.BooleanField(default=False)),
                ('saves', models.IntegerField(default=0)),
                ('ga', models.IntegerField(default=0)),
                ('shutout', models.BooleanField(default=False)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_playerstats_sport_game', to='contenttypes.ContentType')),
                ('player_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_playerstats_sport_player', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_playerstats_playerstats_position', to='sports.Position')),
                ('updated', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 25, 50, 775082, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_type', models.CharField(max_length=255)),
                ('season_year', models.IntegerField(default=0, help_text='the year the season started')),
                ('srid', models.CharField(default=None, help_text='the sportsradar global id of the season/schedule', max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('srid_venue', models.CharField(help_text='the sportsradar global id', max_length=64)),
                ('name', models.CharField(default='', help_text='the team name, without the market/city. ie: "Lakers", or "Eagles"', max_length=64)),
                ('alias', models.CharField(default='', help_text='the abbreviation for the team, ie: for Boston Celtic alias == "BOS"', max_length=64)),
                ('srid_league', models.CharField(help_text='league sportsradar id', max_length=64)),
                ('srid_conference', models.CharField(help_text='conference sportsradar id', max_length=64)),
                ('srid_division', models.CharField(help_text='division sportsradar id', max_length=64)),
                ('market', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_awayteam', to='nhl.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_hometeam', to='nhl.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='prev_status',
            field=models.CharField(default='', max_length=32),
        ),
        migrations.CreateModel(
            name='TsxInjury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('srid', models.CharField(help_text='the sportradar global id for the item', max_length=64)),
                ('pcid', models.CharField(help_text='the providers content id for this item', max_length=64)),
                ('content_created', models.DateTimeField()),
                ('content_modified', models.DateTimeField()),
                ('content_published', models.DateTimeField()),
                ('title', models.CharField(max_length=256)),
                ('byline', models.CharField(max_length=256)),
                ('dateline', models.CharField(max_length=32)),
                ('credit', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=16384)),
                ('tsxcontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_tsxinjury_tsxcontent', to='sports.TsxContent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('srid', models.CharField(help_text='the sportradar global id for the item', max_length=64)),
                ('pcid', models.CharField(help_text='the providers content id for this item', max_length=64)),
                ('content_created', models.DateTimeField()),
                ('content_modified', models.DateTimeField()),
                ('content_published', models.DateTimeField()),
                ('title', models.CharField(max_length=256)),
                ('byline', models.CharField(max_length=256)),
                ('dateline', models.CharField(max_length=32)),
                ('credit', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=16384)),
                ('tsxcontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_tsxnews_tsxcontent', to='sports.TsxContent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sportsdataid', models.CharField(max_length=64)),
                ('sportradarid', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('tsxitem_id', models.PositiveIntegerField()),
                ('tsxitem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_tsxplayer_tsxitem_tsxitemref', to='contenttypes.ContentType')),
                ('content_published', models.DateTimeField(default=datetime.datetime(1999, 1, 1, 12, 0, tzinfo=utc), help_text='the item ref is a GFK so also store the publish date here for ordering purposes.')),
                ('player', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='nhl.Player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sportsdataid', models.CharField(max_length=64)),
                ('sportradarid', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('tsxitem_id', models.PositiveIntegerField()),
                ('tsxitem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_tsxteam_tsxitem_tsxitemref', to='contenttypes.ContentType')),
                ('content_published', models.DateTimeField(default=datetime.datetime(1999, 1, 1, 12, 0, tzinfo=utc), help_text='the item ref is a GFK so also store the publish date here for ordering purposes.')),
                ('team', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='nhl.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('srid', models.CharField(help_text='the sportradar global id for the item', max_length=64)),
                ('pcid', models.CharField(help_text='the providers content id for this item', max_length=64)),
                ('content_created', models.DateTimeField()),
                ('content_modified', models.DateTimeField()),
                ('content_published', models.DateTimeField()),
                ('title', models.CharField(max_length=256)),
                ('byline', models.CharField(max_length=256)),
                ('dateline', models.CharField(max_length=32)),
                ('credit', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=16384)),
                ('tsxcontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nhl_tsxtransaction_tsxcontent', to='sports.TsxContent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='season_fppg',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='game',
            name='updated',
            field=models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 25, 48, 263284, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='lineup_nickname',
            field=models.CharField(default='', help_text='sets the the automatically generated name for lineups using this player', max_length=64),
        ),
        migrations.CreateModel(
            name='PlayerLineupName',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('nhl.player',),
        ),
        migrations.AddField(
            model_name='game',
            name='season_type',
            field=models.CharField(choices=[('pre', 'Preseason'), ('reg', 'Regular Season'), ('pst', 'Postseason')], default='reg', max_length=32),
        ),
        migrations.AddField(
            model_name='game',
            name='season_year',
            field=models.IntegerField(default=0, help_text='the year the season started'),
        ),
        migrations.AlterField(
            model_name='player',
            name='lineup_nickname',
            field=models.CharField(blank=True, default='', help_text='sets the the automatically generated name for lineups using this player', max_length=64),
        ),
        migrations.RunPython(
            code=load_initial_data,
        ),
        migrations.AddField(
            model_name='game',
            name='season',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='nhl.Season'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='game',
            name='season_type',
        ),
        migrations.RemoveField(
            model_name='game',
            name='season_year',
        ),
        migrations.AlterField(
            model_name='tsxinjury',
            name='content',
            field=models.CharField(max_length=32768),
        ),
        migrations.AlterField(
            model_name='tsxnews',
            name='content',
            field=models.CharField(max_length=32768),
        ),
        migrations.AlterField(
            model_name='tsxtransaction',
            name='content',
            field=models.CharField(max_length=32768),
        ),
        migrations.AlterField(
            model_name='season',
            name='srid',
            field=models.CharField(help_text='the sportsradar global id of the season/schedule', max_length=64),
        ),
        migrations.AddField(
            model_name='player',
            name='on_active_roster',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='playerstats',
            name='blk_att',
            field=models.IntegerField(default=0, help_text='this players shots which were subsequently blocked by an opposing skater'),
        ),
        migrations.AddField(
            model_name='playerstats',
            name='ms',
            field=models.IntegerField(default=0, help_text='this players missed shots (shots wide of the goalie/net)'),
        ),
        migrations.AddField(
            model_name='playerstats',
            name='played',
            field=models.IntegerField(default=0, help_text='a value of 1 indicates the player participated in the game. 0 indicates they did not play at all.'),
        ),
        migrations.AddField(
            model_name='playerstats',
            name='fp_change',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='game',
            name='boxscore_data',
            field=models.CharField(max_length=8192, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='playerstats',
            unique_together=set([('srid_player', 'srid_game')]),
        ),
    ]
