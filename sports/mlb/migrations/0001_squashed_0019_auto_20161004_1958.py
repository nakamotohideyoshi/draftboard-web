# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-15 12:39
from __future__ import unicode_literals

import datetime
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# sports.mlb.migrations.0004_auto_20160302_1121
def load_initial_data(apps, schema_editor):
    """
    adds a dummy Season object to facillitate the migratino of older
    Game objects which cant have a foreign key to a null Season!

    :param apps:
    :param schema_editor:
    :return:
    """

    # get the model by name
    sport = 'mlb'
    Season = apps.get_model(sport, 'Season')
    try:
        # this must exist for migration to work
        season = Season.objects.get(pk=1)
    except Season.DoesNotExist:
        season = Season()
        season.srid = '%s_dummy_srid' % sport
        season.season_year = 0
        season.season_type = '%s_dummy_season_type' % sport
        season.save()


class Migration(migrations.Migration):

    replaces = [('mlb', '0001_initial'), ('mlb', '0002_auto_20150528_2321'), ('mlb', '0003_auto_20150625_0016'), ('mlb', '0004_game_prev_status'), ('mlb', '0005_tsxinjury_tsxnews_tsxplayer_tsxteam_tsxtransaction'), ('mlb', '0006_auto_20160110_2114'), ('mlb', '0007_auto_20160110_2243'), ('mlb', '0008_player_season_fppg'), ('mlb', '0009_auto_20160119_2126'), ('mlb', '0002_player_lineup_nickname'), ('mlb', '0003_auto_20160229_1717'), ('mlb', '0004_auto_20160302_1121'), ('mlb', '0005_auto_20160302_1625'), ('mlb', '0006_auto_20160309_2019'), ('mlb', '0007_auto_20160315_1927'), ('mlb', '0008_auto_20160404_1312'), ('mlb', '0009_player_on_active_roster'), ('mlb', '0010_probablepitcher'), ('mlb', '0011_auto_20160524_2033'), ('mlb', '0012_probablepitcher_srid_team'), ('mlb', '0013_realtimeatbat'), ('mlb', '0014_auto_20160621_1654'), ('mlb', '0015_livefeed'), ('mlb', '0016_auto_20160722_1507'), ('mlb', '0015_auto_20160727_1806'), ('mlb', '0017_merge'), ('mlb', '0018_game_boxscore_data'), ('mlb', '0019_auto_20161004_1958')]

    initial = True

    dependencies = [
        ('sports', '0001_squashed_0008_auto_20160119_2124'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('start', models.DateTimeField()),
                ('status', models.CharField(max_length=32)),
                ('srid_home', models.CharField(help_text='home team sportsradar global id', max_length=64)),
                ('srid_away', models.CharField(help_text='away team sportsradar global id', max_length=64)),
                ('title', models.CharField(max_length=128, null=True)),
                ('attendance', models.IntegerField(default=0)),
                ('day_night', models.CharField(default='', max_length=8)),
                ('game_number', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameBoxscore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(default=None, help_text='the sportsradar global id for the game', max_length=64, unique=True)),
                ('srid_home', models.CharField(max_length=64)),
                ('srid_away', models.CharField(max_length=64)),
                ('home_id', models.PositiveIntegerField()),
                ('away_id', models.PositiveIntegerField()),
                ('attendance', models.IntegerField(default=0)),
                ('coverage', models.CharField(default='', max_length=64)),
                ('status', models.CharField(default='', max_length=64)),
                ('home_score', models.IntegerField(default=0)),
                ('away_score', models.IntegerField(default=0)),
                ('title', models.CharField(default='', max_length=256)),
                ('home_scoring_json', models.CharField(default='', max_length=2048)),
                ('away_scoring_json', models.CharField(default='', max_length=2048)),
                ('day_night', models.CharField(default='', max_length=8)),
                ('game_number', models.IntegerField(default=1)),
                ('inning', models.CharField(default='', max_length=16)),
                ('inning_half', models.CharField(default='', max_length=16)),
                ('srid_home_pp', models.CharField(help_text='srid of the HOME probable pitcher set before the game starts', max_length=64, null=True)),
                ('srid_home_sp', models.CharField(help_text='srid of the HOME starting pitcher', max_length=64, null=True)),
                ('srid_away_pp', models.CharField(help_text='srid of the AWAY probable pitcher set before the game starts', max_length=64, null=True)),
                ('srid_away_sp', models.CharField(help_text='srid of the AWAY starting pitcher', max_length=64, null=True)),
                ('srid_win', models.CharField(max_length=64, null=True)),
                ('srid_loss', models.CharField(max_length=64, null=True)),
                ('home_errors', models.IntegerField(default=0)),
                ('home_hits', models.IntegerField(default=0)),
                ('away_errors', models.IntegerField(default=0)),
                ('away_hits', models.IntegerField(default=0)),
                ('away_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_gameboxscore_away_team', to='contenttypes.ContentType')),
                ('home_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_gameboxscore_home_team', to='contenttypes.ContentType')),
                ('updated', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 26, 17, 112077, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GamePortion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game this is associate with', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('category', models.CharField(default='', help_text='typically one of these: ["inning-half","quarter","period"]', max_length=32)),
                ('sequence', models.IntegerField(default=0, help_text='an ordering of all GamePortions with the same srid_game')),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_gameportion_sport_game', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('iid', models.CharField(help_text='custom injury id', max_length=128, unique=True)),
                ('player_id', models.PositiveIntegerField()),
                ('status', models.CharField(default='', max_length=32)),
                ('description', models.CharField(default='', max_length=1024)),
                ('player_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_injury_injured_player', to='contenttypes.ContentType')),
                ('ddtimestamp', models.BigIntegerField(default=0, help_text='the time this injury update was parsed by dataden.this will be the same value for all objects that were in the feed on the last parse.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pbp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_pbp_sport_game', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PbpDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('pbp_id', models.PositiveIntegerField()),
                ('portion_id', models.PositiveIntegerField()),
                ('idx', models.IntegerField(default=0)),
                ('description', models.CharField(default='', max_length=1024)),
                ('pbp_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_pbpdescription_pbpdesc_pbp', to='contenttypes.ContentType')),
                ('portion_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_pbpdescription_pbpdesc_portion', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('injury_id', models.PositiveIntegerField(null=True)),
                ('srid_team', models.CharField(default='', max_length=64)),
                ('preferred_name', models.CharField(default='', max_length=64)),
                ('birthcity', models.CharField(default='', max_length=64)),
                ('birthcountry', models.CharField(default='', max_length=64)),
                ('birthdate', models.CharField(default='', max_length=64)),
                ('height', models.FloatField(default=0.0, help_text='inches')),
                ('weight', models.FloatField(default=0.0, help_text='lbs')),
                ('jersey_number', models.CharField(default='', max_length=64)),
                ('status', models.CharField(default='', help_text='roster status - ie: "A" means they are ON the roster. Not particularly active as in not-injured!', max_length=64)),
                ('pro_debut', models.CharField(default='', max_length=64)),
                ('throw_hand', models.CharField(default='', max_length=8)),
                ('bat_hand', models.CharField(default='', max_length=8)),
                ('injury_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mlb_player_players_injury', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_player_player_position', to='sports.Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStatsHitter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game', max_length=64)),
                ('srid_player', models.CharField(help_text='the sportsradar global id for the player', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('player_id', models.PositiveIntegerField()),
                ('fantasy_points', models.FloatField(default=0.0)),
                ('play', models.BooleanField(default=False)),
                ('start', models.BooleanField(default=False)),
                ('bb', models.IntegerField(default=0)),
                ('s', models.IntegerField(default=0)),
                ('d', models.IntegerField(default=0)),
                ('t', models.IntegerField(default=0)),
                ('hr', models.IntegerField(default=0)),
                ('rbi', models.IntegerField(default=0)),
                ('r', models.IntegerField(default=0)),
                ('hbp', models.IntegerField(default=0)),
                ('sb', models.IntegerField(default=0)),
                ('cs', models.IntegerField(default=0)),
                ('ktotal', models.IntegerField(default=0)),
                ('ab', models.IntegerField(default=0)),
                ('ap', models.IntegerField(default=0)),
                ('lob', models.IntegerField(default=0)),
                ('xbh', models.IntegerField(default=0)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_playerstatshitter_sport_game', to='contenttypes.ContentType')),
                ('player_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_playerstatshitter_sport_player', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_playerstatshitter_playerstats_position', to='sports.Position')),
                ('updated', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 26, 18, 31855, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStatsPitcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game', max_length=64)),
                ('srid_player', models.CharField(help_text='the sportsradar global id for the player', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('player_id', models.PositiveIntegerField()),
                ('fantasy_points', models.FloatField(default=0.0)),
                ('play', models.BooleanField(default=False)),
                ('start', models.BooleanField(default=False)),
                ('ip_1', models.FloatField(default=0.0)),
                ('ip_2', models.FloatField(default=0.0)),
                ('ktotal', models.IntegerField(default=0)),
                ('win', models.BooleanField(default=False)),
                ('loss', models.BooleanField(default=False)),
                ('qstart', models.BooleanField(default=False)),
                ('er', models.IntegerField(default=0)),
                ('r_total', models.IntegerField(default=0)),
                ('h', models.IntegerField(default=0)),
                ('bb', models.IntegerField(default=0)),
                ('hbp', models.IntegerField(default=0)),
                ('cg', models.BooleanField(default=False)),
                ('cgso', models.BooleanField(default=False)),
                ('nono', models.BooleanField(default=False)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_playerstatspitcher_sport_game', to='contenttypes.ContentType')),
                ('player_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_playerstatspitcher_sport_player', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_playerstatspitcher_playerstats_position', to='sports.Position')),
                ('updated', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 26, 19, 408245, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_type', models.CharField(max_length=255)),
                ('season_year', models.IntegerField(default=0, help_text='the year the season started')),
                ('srid', models.CharField(default=None, help_text='the sportsradar global id of the season/schedule', max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('srid_venue', models.CharField(help_text='the sportsradar global id', max_length=64)),
                ('name', models.CharField(default='', help_text='the team name, without the market/city. ie: "Lakers", or "Eagles"', max_length=64)),
                ('alias', models.CharField(default='', help_text='the abbreviation for the team, ie: for Boston Celtic alias == "BOS"', max_length=64)),
                ('srid_league', models.CharField(help_text='league sportsradar id', max_length=64)),
                ('srid_division', models.CharField(help_text='division sportsradar id', max_length=64)),
                ('market', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mlb.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_awayteam', to='mlb.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_hometeam', to='mlb.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='prev_status',
            field=models.CharField(default='', max_length=32),
        ),
        migrations.CreateModel(
            name='TsxInjury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('srid', models.CharField(help_text='the sportradar global id for the item', max_length=64)),
                ('pcid', models.CharField(help_text='the providers content id for this item', max_length=64)),
                ('content_created', models.DateTimeField()),
                ('content_modified', models.DateTimeField()),
                ('content_published', models.DateTimeField()),
                ('title', models.CharField(max_length=256)),
                ('byline', models.CharField(max_length=256)),
                ('dateline', models.CharField(max_length=32)),
                ('credit', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=16384)),
                ('tsxcontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_tsxinjury_tsxcontent', to='sports.TsxContent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('srid', models.CharField(help_text='the sportradar global id for the item', max_length=64)),
                ('pcid', models.CharField(help_text='the providers content id for this item', max_length=64)),
                ('content_created', models.DateTimeField()),
                ('content_modified', models.DateTimeField()),
                ('content_published', models.DateTimeField()),
                ('title', models.CharField(max_length=256)),
                ('byline', models.CharField(max_length=256)),
                ('dateline', models.CharField(max_length=32)),
                ('credit', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=16384)),
                ('tsxcontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_tsxnews_tsxcontent', to='sports.TsxContent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sportsdataid', models.CharField(max_length=64)),
                ('sportradarid', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('tsxitem_id', models.PositiveIntegerField()),
                ('tsxitem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_tsxplayer_tsxitem_tsxitemref', to='contenttypes.ContentType')),
                ('content_published', models.DateTimeField(default=datetime.datetime(1999, 1, 1, 12, 0, tzinfo=utc), help_text='the item ref is a GFK so also store the publish date here for ordering purposes.')),
                ('player', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mlb.Player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sportsdataid', models.CharField(max_length=64)),
                ('sportradarid', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('tsxitem_id', models.PositiveIntegerField()),
                ('tsxitem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_tsxteam_tsxitem_tsxitemref', to='contenttypes.ContentType')),
                ('content_published', models.DateTimeField(default=datetime.datetime(1999, 1, 1, 12, 0, tzinfo=utc), help_text='the item ref is a GFK so also store the publish date here for ordering purposes.')),
                ('team', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mlb.Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TsxTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('srid', models.CharField(help_text='the sportradar global id for the item', max_length=64)),
                ('pcid', models.CharField(help_text='the providers content id for this item', max_length=64)),
                ('content_created', models.DateTimeField()),
                ('content_modified', models.DateTimeField()),
                ('content_published', models.DateTimeField()),
                ('title', models.CharField(max_length=256)),
                ('byline', models.CharField(max_length=256)),
                ('dateline', models.CharField(max_length=32)),
                ('credit', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=16384)),
                ('tsxcontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mlb_tsxtransaction_tsxcontent', to='sports.TsxContent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='season_fppg',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='game',
            name='updated',
            field=models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 26, 16, 176028, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='lineup_nickname',
            field=models.CharField(default='', help_text='sets the the automatically generated name for lineups using this player', max_length=64),
        ),
        migrations.CreateModel(
            name='PlayerLineupName',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('mlb.player',),
        ),
        migrations.AddField(
            model_name='game',
            name='season_type',
            field=models.CharField(choices=[('pre', 'Preseason'), ('reg', 'Regular Season'), ('pst', 'Postseason')], default='reg', max_length=32),
        ),
        migrations.AddField(
            model_name='game',
            name='season_year',
            field=models.IntegerField(default=0, help_text='the year the season started'),
        ),
        migrations.AlterField(
            model_name='player',
            name='lineup_nickname',
            field=models.CharField(blank=True, default='', help_text='sets the the automatically generated name for lineups using this player', max_length=64),
        ),
        migrations.RunPython(
            code=load_initial_data,
        ),
        migrations.AddField(
            model_name='game',
            name='season',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='mlb.Season'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='game',
            name='season_type',
        ),
        migrations.RemoveField(
            model_name='game',
            name='season_year',
        ),
        migrations.AlterField(
            model_name='tsxinjury',
            name='content',
            field=models.CharField(max_length=32768),
        ),
        migrations.AlterField(
            model_name='tsxnews',
            name='content',
            field=models.CharField(max_length=32768),
        ),
        migrations.AlterField(
            model_name='tsxtransaction',
            name='content',
            field=models.CharField(max_length=32768),
        ),
        migrations.AlterField(
            model_name='season',
            name='srid',
            field=models.CharField(help_text='the sportsradar global id of the season/schedule', max_length=64),
        ),
        migrations.RenameField(
            model_name='playerstatshitter',
            old_name='play',
            new_name='played',
        ),
        migrations.RenameField(
            model_name='playerstatshitter',
            old_name='start',
            new_name='started',
        ),
        migrations.RenameField(
            model_name='playerstatspitcher',
            old_name='play',
            new_name='played',
        ),
        migrations.RenameField(
            model_name='playerstatspitcher',
            old_name='start',
            new_name='started',
        ),
        migrations.AddField(
            model_name='player',
            name='on_active_roster',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='ProbablePitcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('srid_game', models.CharField(max_length=64)),
                ('srid_player', models.CharField(max_length=64)),
                ('srid_team', models.CharField(default='', max_length=64)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='probablepitcher',
            unique_together=set([('srid_game', 'srid_player')]),
        ),
        migrations.CreateModel(
            name='RealTimeAtBat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dd_updated', models.BigIntegerField(default=0, help_text='unix timestamp when this was originally parsed by dataden')),
                ('srid', models.CharField(help_text='sportsradar global id', max_length=64)),
                ('at_bat', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='LiveFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='dataden parent api of feed', max_length=32)),
                ('game_srid', models.CharField(help_text='sportsradar global id', max_length=64)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.AddField(
            model_name='playerstatshitter',
            name='fp_change',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='playerstatspitcher',
            name='fp_change',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='game',
            name='boxscore_data',
            field=models.CharField(max_length=8192, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='playerstatshitter',
            unique_together=set([('srid_player', 'srid_game')]),
        ),
        migrations.AlterUniqueTogether(
            name='playerstatspitcher',
            unique_together=set([('srid_player', 'srid_game')]),
        ),
    ]
