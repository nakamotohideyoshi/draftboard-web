# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('nfl', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(max_length=64, help_text='the sportsradar global id', unique=True)),
                ('start', models.DateTimeField()),
                ('status', models.CharField(max_length=32)),
                ('srid_home', models.CharField(max_length=64, help_text='home team sportsradar global id')),
                ('srid_away', models.CharField(max_length=64, help_text='away team sportsradar global id')),
                ('title', models.CharField(max_length=128, null=True)),
                ('weather_json', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameBoxscore',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(default=None, max_length=64, help_text='the sportsradar global id for the game', unique=True)),
                ('srid_home', models.CharField(max_length=64)),
                ('srid_away', models.CharField(max_length=64)),
                ('home_id', models.PositiveIntegerField()),
                ('away_id', models.PositiveIntegerField()),
                ('attendance', models.IntegerField(default=0)),
                ('coverage', models.CharField(default='', max_length=16)),
                ('status', models.CharField(default='', max_length=64)),
                ('home_score', models.IntegerField(default=0)),
                ('away_score', models.IntegerField(default=0)),
                ('title', models.CharField(default='', max_length=256)),
                ('home_scoring_json', models.CharField(default='', max_length=2048)),
                ('away_scoring_json', models.CharField(default='', max_length=2048)),
                ('clock', models.CharField(default='', max_length=16)),
                ('completed', models.CharField(default='', max_length=64)),
                ('quarter', models.CharField(default='', max_length=16)),
                ('away_type', models.ForeignKey(related_name='nfl_gameboxscore_away_team', to='contenttypes.ContentType')),
                ('home_type', models.ForeignKey(related_name='nfl_gameboxscore_home_team', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GamePortion',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(max_length=64, help_text='the sportsradar global id for the game this is associate with')),
                ('game_id', models.PositiveIntegerField()),
                ('category', models.CharField(default='', max_length=32, help_text='typically one of these: ["inning-half","quarter","period"]')),
                ('sequence', models.IntegerField(default=0, help_text='an ordering of all GamePortions with the same srid_game')),
                ('srid', models.CharField(default='', max_length=64)),
                ('game_type', models.ForeignKey(related_name='nfl_gameportion_sport_game', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pbp',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(max_length=64, help_text='the sportsradar global id for the game')),
                ('game_id', models.PositiveIntegerField()),
                ('game_type', models.ForeignKey(related_name='nfl_pbp_sport_game', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PbpDescription',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('pbp_id', models.PositiveIntegerField()),
                ('portion_id', models.PositiveIntegerField()),
                ('idx', models.IntegerField(default=0)),
                ('description', models.CharField(default='', max_length=1024)),
                ('srid', models.CharField(default='', max_length=64)),
                ('pbp_type', models.ForeignKey(related_name='nfl_pbpdescription_pbpdesc_pbp', to='contenttypes.ContentType')),
                ('portion_type', models.ForeignKey(related_name='nfl_pbpdescription_pbpdesc_portion', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(max_length=64, help_text='the sportsradar global id', unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('srid_team', models.CharField(default='', max_length=64)),
                ('birth_place', models.CharField(default='', max_length=64)),
                ('birthdate', models.CharField(default='', max_length=64)),
                ('college', models.CharField(default='', max_length=64)),
                ('experience', models.FloatField(default=0.0)),
                ('height', models.FloatField(default=0.0, help_text='inches')),
                ('weight', models.FloatField(default=0.0, help_text='lbs')),
                ('jersey_number', models.CharField(default='', max_length=64)),
                ('position', models.CharField(default='', max_length=64)),
                ('primary_position', models.CharField(default='', max_length=64)),
                ('status', models.CharField(default='', max_length=64, help_text='roster status - ie: "ACT" means they are ON the roster. Not particularly active as in not-injured!')),
                ('draft_pick', models.CharField(default='', max_length=64)),
                ('draft_round', models.CharField(default='', max_length=64)),
                ('draft_year', models.CharField(default='', max_length=64)),
                ('srid_draft_team', models.CharField(default='', max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(max_length=64, help_text='the sportsradar global id for the game')),
                ('srid_player', models.CharField(max_length=64, help_text='the sportsradar global id for the player')),
                ('game_id', models.PositiveIntegerField()),
                ('player_id', models.PositiveIntegerField()),
                ('fantasy_points', models.FloatField(default=0.0)),
                ('position', models.CharField(default='', max_length=16)),
                ('primary_position', models.CharField(default='', max_length=16)),
                ('pass_td', models.IntegerField(default=0)),
                ('pass_yds', models.IntegerField(default=0)),
                ('pass_int', models.IntegerField(default=0)),
                ('rush_td', models.IntegerField(default=0)),
                ('rush_yds', models.IntegerField(default=0)),
                ('rec_td', models.IntegerField(default=0)),
                ('rec_yds', models.IntegerField(default=0)),
                ('rec_rec', models.IntegerField(default=0)),
                ('off_fum_lost', models.IntegerField(default=0)),
                ('off_fum_rec_td', models.IntegerField(default=0)),
                ('two_pt_conv', models.IntegerField(default=0)),
                ('sack', models.IntegerField(default=0)),
                ('ints', models.IntegerField(default=0)),
                ('fum_rec', models.IntegerField(default=0)),
                ('ret_kick_td', models.IntegerField(default=0)),
                ('ret_punt_td', models.IntegerField(default=0)),
                ('ret_int_td', models.IntegerField(default=0)),
                ('ret_fum_td', models.IntegerField(default=0)),
                ('ret_blk_punt_td', models.IntegerField(default=0)),
                ('ret_fg_td', models.IntegerField(default=0)),
                ('ret_blk_fg_td', models.IntegerField(default=0)),
                ('sfty', models.IntegerField(default=0)),
                ('blk_kick', models.IntegerField(default=0)),
                ('int_td_against', models.IntegerField(default=0)),
                ('fum_td_against', models.IntegerField(default=0)),
                ('off_pass_sfty', models.IntegerField(default=0)),
                ('off_rush_sfty', models.IntegerField(default=0)),
                ('off_punt_sfty', models.IntegerField(default=0)),
                ('game_type', models.ForeignKey(related_name='nfl_playerstats_sport_game', to='contenttypes.ContentType')),
                ('player_type', models.ForeignKey(related_name='nfl_playerstats_sport_player', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('start_year', models.CharField(max_length=100)),
                ('season_type', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name='ID', primary_key=True, auto_created=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(max_length=64, help_text='the sportsradar global id', unique=True)),
                ('srid_venue', models.CharField(max_length=64, help_text='the sportsradar global id')),
                ('name', models.CharField(default='', max_length=64, help_text='the team name, without the market/city. ie: "Lakers", or "Eagles"')),
                ('alias', models.CharField(default='', max_length=64, help_text='the abbreviation for the team, ie: for Boston Celtic alias == "BOS"')),
                ('srid_league', models.CharField(max_length=64, help_text='league sportsradar id')),
                ('srid_conference', models.CharField(max_length=64, help_text='conference sportsradar id')),
                ('srid_division', models.CharField(max_length=64, help_text='division sportsradar id')),
                ('market', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(to='nfl.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='away',
            field=models.ForeignKey(related_name='game_awayteam', to='nfl.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home',
            field=models.ForeignKey(related_name='game_hometeam', to='nfl.Team'),
        ),
    ]
