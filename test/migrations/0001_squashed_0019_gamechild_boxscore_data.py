# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-15 12:27
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    replaces = [('test', '0001_initial'), ('test', '0002_auto_20150623_2321'), ('test', '0003_teamchild'), ('test', '0004_playerchild_team'), ('test', '0005_auto_20150701_1905'), ('test', '0006_auto_20150701_1916'), ('test', '0007_auto_20150727_1527'), ('test', '0008_auto_20150731_1655'), ('test', '0009_gamechild_prev_status'), ('test', '0010_auto_20150918_1539'), ('test', '0011_auto_20150918_1546'), ('test', '0012_auto_20160119_2127'), ('test', '0013_playerchild_lineup_nickname'), ('test', '0014_auto_20160229_1717'), ('test', '0015_auto_20160302_1624'), ('test', '0016_auto_20160315_2251'), ('test', '0017_playerchild_on_active_roster'), ('test', '0018_playerstatschild_fp_change'), ('test', '0019_gamechild_boxscore_data')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('sports', '0001_squashed_0008_auto_20160119_2124'),
        ('auth', '0006_require_contenttypes_0002'),
        ('transaction', '0002_auto_20150408_0015'),
    ]

    operations = [
        migrations.CreateModel(
            name='BalanceChild',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('start', models.DateTimeField()),
                ('status', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('injury_id', models.PositiveIntegerField(null=True)),
                ('injury_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_playerchild_players_injury', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_playerchild_player_position', to='sports.Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStatsChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid_game', models.CharField(help_text='the sportsradar global id for the game', max_length=64)),
                ('srid_player', models.CharField(help_text='the sportsradar global id for the player', max_length=64)),
                ('game_id', models.PositiveIntegerField()),
                ('player_id', models.PositiveIntegerField()),
                ('fantasy_points', models.FloatField(default=0.0)),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_playerstatschild_sport_game', to='contenttypes.ContentType')),
                ('player_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_playerstatschild_sport_player', to='contenttypes.ContentType')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_playerstatschild_playerstats_position', to='sports.Position')),
                ('updated', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 26, 40, 767100, tzinfo=utc))),
                ('fp_change', models.FloatField(default=0.0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionDetailChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.Transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='transactiondetailchild',
            unique_together=set([('user', 'transaction')]),
        ),
        migrations.CreateModel(
            name='TeamChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('srid', models.CharField(help_text='the sportsradar global id', max_length=64, unique=True)),
                ('srid_venue', models.CharField(help_text='the sportsradar global id', max_length=64)),
                ('name', models.CharField(default='', help_text='the team name, without the market/city. ie: "Lakers", or "Eagles"', max_length=64)),
                ('alias', models.CharField(default='', help_text='the abbreviation for the team, ie: for Boston Celtic alias == "BOS"', max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='playerchild',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='test.TeamChild'),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='away',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gamechild_awayteam', to='test.TeamChild'),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='home',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gamechild_hometeam', to='test.TeamChild'),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='srid_away',
            field=models.CharField(help_text='away team sportsradar global id', max_length=64, null=True),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='srid_home',
            field=models.CharField(help_text='home team sportsradar global id', max_length=64, null=True),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='title',
            field=models.CharField(max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='transactiondetailchild',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='transaction.Transaction'),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='prev_status',
            field=models.CharField(default='', max_length=32),
        ),
        migrations.AlterField(
            model_name='transactiondetailchild',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=9),
        ),
        migrations.AlterField(
            model_name='transactiondetailchild',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=11),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='updated',
            field=models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 1, 19, 2, 26, 39, 240665, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='playerchild',
            name='season_fppg',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='playerchild',
            name='lineup_nickname',
            field=models.CharField(blank=True, default='', help_text='sets the the automatically generated name for lineups using this player', max_length=64),
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srid', models.CharField(help_text='the sportsradar global id of the season/schedule', max_length=64)),
                ('season_year', models.IntegerField(default=0, help_text='the year the season started')),
                ('season_type', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='gamechild',
            name='season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='test.Season'),
        ),
        migrations.AddField(
            model_name='playerchild',
            name='on_active_roster',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='gamechild',
            name='boxscore_data',
            field=models.CharField(max_length=8192, null=True),
        ),
    ]
