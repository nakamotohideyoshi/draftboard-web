{"version":3,"sources":["webpack:///js/homepage.js","webpack:///webpack/bootstrap dcd57169e4cca5bbad16?cee0","webpack:///(webpack)/hot/dev-server.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","842","1127","Error"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,WAGAV,EAAA,KDMMW,EACA,SAASP,EAAQD,EAASH,GAE/BA,EAAoB,MACpBI,EAAOD,QAAUH,EAAoB,MAKhCY,IACA,SAASR,EAAQD,KAMjBU,KACA,SAAST,EAAQD,EAASH,GEAhC,SAAAc,OAAA","file":"js/homepage.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1127);\n\tmodule.exports = __webpack_require__(842);\n\n\n/***/ },\n\n/***/ 842:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 1127:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\t/*globals window __webpack_hash__ */\n\tif(false) {\n\t\tvar lastData;\n\t\tvar upToDate = function upToDate() {\n\t\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\n\t\t};\n\t\tvar check = function check() {\n\t\t\tmodule.hot.check(true, function(err, updatedModules) {\n\t\t\t\tif(err) {\n\t\t\t\t\tif(module.hot.status() in {\n\t\t\t\t\t\t\tabort: 1,\n\t\t\t\t\t\t\tfail: 1\n\t\t\t\t\t\t}) {\n\t\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\n\t\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif(!updatedModules) {\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif(!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\t\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\t\n\t\t\t\tif(upToDate()) {\n\t\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\n\t\t\t});\n\t\t};\n\t\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\n\t\t\twindow.addEventListener(eventName, listener, false);\n\t\t} : function(eventName, listener) {\n\t\t\twindow.attachEvent(\"on\" + eventName, listener);\n\t\t};\n\t\taddEventListener(\"message\", function(event) {\n\t\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\n\t\t\t\tlastData = event.data;\n\t\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\n\t\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\n\t} else {\n\t\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n\t}\n\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// js/homepage.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dcd57169e4cca5bbad16","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals window __webpack_hash__ */\nif(module.hot) {\n\tvar lastData;\n\tvar upToDate = function upToDate() {\n\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar check = function check() {\n\t\tmodule.hot.check(true, function(err, updatedModules) {\n\t\t\tif(err) {\n\t\t\t\tif(module.hot.status() in {\n\t\t\t\t\t\tabort: 1,\n\t\t\t\t\t\tfail: 1\n\t\t\t\t\t}) {\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\n\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!updatedModules) {\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\n\t\t\t\twindow.location.reload();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!upToDate()) {\n\t\t\t\tcheck();\n\t\t\t}\n\n\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\tif(upToDate()) {\n\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\n\t\t\t}\n\n\t\t});\n\t};\n\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\n\t\twindow.addEventListener(eventName, listener, false);\n\t} : function(eventName, listener) {\n\t\twindow.attachEvent(\"on\" + eventName, listener);\n\t};\n\taddEventListener(\"message\", function(event) {\n\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\n\t\t\tlastData = event.data;\n\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\n\t\t\t\tcheck();\n\t\t\t}\n\t\t}\n\t});\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/hot/dev-server.js\n// module id = 1127\n// module chunks = 1"],"sourceRoot":""}